buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}


plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.5'
    id 'io.spring.dependency-management' version '1.1.0'
//    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10" //springboot 3 이후부터는 querydsl plugin x
}

group = 'brave'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

jar{
    enabled =false
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    implementation group: 'io.awspring.cloud', name: 'spring-cloud-aws-starter-s3', version: '3.0.0-RC2'
    implementation group: 'io.awspring.cloud', name: 'spring-cloud-aws-starter', version: '3.0.0-RC2'

    // Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.4'

    //문자 메세지 연동
    implementation 'net.nurigo:sdk:4.2.9'


    // querydsl  스프링 부트 3.0 이상 ==
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"


}

def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
    main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

clean.doLast {
    file(querydslDir).deleteDir()
}

tasks.named('test') {
    environment "SPRING_DATASOURCE_JDBC_URL",  System.getenv('SPRING_DATASOURCE_JDBC_URL')
    environment "SPRING_DATASOURCE_APP_USERNAME",  System.getenv('SPRING_DATASOURCE_APP_USERNAME')
    environment "SPRING_DATASOURCE_APP_PASSWORD",  System.getenv('SPRING_DATASOURCE_APP_PASSWORD')
    environment "SPRING_DATASOURCE_BO_USERNAME",  System.getenv('SPRING_DATASOURCE_BO_USERNAME')
    environment "SPRING_DATASOURCE_BO_PASSWORD",  System.getenv('SPRING_DATASOURCE_BO_PASSWORD')
    environment "AWS_ACCESS_KEY_ID",  System.getenv('AWS_ACCESS_KEY_ID')
    environment "AWS_SECRET_ACCESS_KEY",  System.getenv('AWS_SECRET_ACCESS_KEY')
    environment "AWS_REGION",  System.getenv('AWS_REGION')
    environment "SMS_DOMAIN",  System.getenv('SMS_DOMAIN')
    environment "SMS_PUBLICKEY",  System.getenv('SMS_PUBLIC_KEY')
    environment "SMS_SECRETKEY",  System.getenv('SMS_SECRET_KEY')

    useJUnitPlatform()
}
